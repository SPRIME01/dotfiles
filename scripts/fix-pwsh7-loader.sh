#!/usr/bin/env bash
set -euo pipefail

# Regenerate the PowerShell 7 loader profile(s) on Windows, pointing to this repo via UNC.
# Writes to both Documents\PowerShell and OneDrive\MyDocuments\PowerShell if present.

if [[ -z "${WSL_DISTRO_NAME:-}" ]]; then
  echo "❌ Must be run from WSL" >&2
  exit 1
fi

WIN_USER=$(cmd.exe /c "echo %USERNAME%" 2>/dev/null | tr -d '\r' 2>/dev/null)
if [[ -z "$WIN_USER" ]]; then
  echo "❌ Could not determine Windows username" >&2
  exit 1
fi

UNC_ROOT="\\\\wsl.localhost\\${WSL_DISTRO_NAME}\\home\\${USER}\\dotfiles"

write_loader() {
  local target_wsl="$1"
  local parent
  parent=$(dirname "$target_wsl")
  mkdir -p "$parent"
  cat >"$target_wsl" <<'EOF'
# Windows PowerShell 7 Profile - Loader generated by fix-pwsh7-loader.sh
# Points to the repo in WSL via UNC; quiet by default
${env:DOTFILES_ROOT} = "UNC_ROOT_PLACEHOLDER"
if (-not ${env:PROJECTS_ROOT} -or [string]::IsNullOrWhiteSpace(${env:PROJECTS_ROOT})) {
  ${env:PROJECTS_ROOT} = Join-Path ${env:USERPROFILE} 'projects'
}
$main = Join-Path ${env:DOTFILES_ROOT} 'PowerShell\Microsoft.PowerShell_profile.ps1'
try { . $main } catch { Write-Warning $_.Exception.Message }
EOF
  # Replace placeholder with actual UNC path
  sed -i "s|UNC_ROOT_PLACEHOLDER|$UNC_ROOT|g" "$target_wsl"
  echo "✅ Wrote loader: $target_wsl"
}

# Documents\PowerShell
DOCS_LOADER="/mnt/c/Users/$WIN_USER/Documents/PowerShell/Microsoft.PowerShell_profile.ps1"
write_loader "$DOCS_LOADER" || true

# OneDrive\MyDocuments\PowerShell (if tree exists)
OD_LOADER="/mnt/c/Users/$WIN_USER/OneDrive/MyDocuments/PowerShell/Microsoft.PowerShell_profile.ps1"
if [[ -d "/mnt/c/Users/$WIN_USER/OneDrive/MyDocuments/PowerShell" ]]; then
  write_loader "$OD_LOADER" || true
fi

echo "🎉 Loader regeneration complete"
