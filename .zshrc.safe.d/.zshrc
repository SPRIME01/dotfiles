# Safe zshrc wrapper to prevent startup crashes
# Generated by Codex to bypass fatal exits and guard npiperelay.

# Be tolerant during interactive init
setopt no_errexit 2>/dev/null
set +e 2>/dev/null || true

# WSL SSH agent bridge (non-fatal)
if [ -n "$WSL_DISTRO_NAME" ]; then
  export SSH_AUTH_SOCK="$HOME/.ssh/agent.sock"
  _np=""
  if command -v npiperelay.exe >/dev/null 2>&1; then
    _np="$(command -v npiperelay.exe)"
  elif [ -n "$NPIPERELAY_PATH" ]; then
    if command -v wslpath >/dev/null 2>&1; then
      _np="$(wslpath -u "$NPIPERELAY_PATH" 2>/dev/null || true)"
    fi
  fi
  if [ -n "$_np" ]; then
    if command -v socat >/dev/null 2>&1; then
      if ! ss -a 2>/dev/null | grep -q "$SSH_AUTH_SOCK"; then
        rm -f "$SSH_AUTH_SOCK"
        setsid nohup socat "UNIX-LISTEN:$SSH_AUTH_SOCK,fork" \
          "EXEC:\"$_np -ep -s //./pipe/openssh-ssh-agent\",nofork" \
          >/dev/null 2>&1 &
      fi
    fi
  fi
  unset _np
fi

# If npiperelay.exe is missing, alias it to a no-op to avoid crashes
if ! command -v npiperelay.exe >/dev/null 2>&1; then
  alias npiperelay.exe=true
fi

# Source original config under protection (always, non-fatal)
if [ -r "$HOME/.zshrc" ]; then
  function exit() { builtin echo "[zshrc] suppressed exit $*" >&2; return 0; }
  emulate -L zsh
  setopt no_errexit
  set +e
  # Filter noisy npiperelay warning if any script prints it
  if command -v grep >/dev/null 2>&1; then
    { source "$HOME/.zshrc" 2> >(grep -v "npiperelay.exe not found" >&2); } || true
  else
    { source "$HOME/.zshrc"; } || true
  fi
  unfunction exit 2>/dev/null
fi

# Cleanup init guards
unset ZSH_SAFE_INIT
unfunction exit 2>/dev/null || true
